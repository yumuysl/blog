import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,f as l,o as n}from"./app-CkvgXyJu.js";const s={};function t(r,a){return n(),i("div",null,[...a[0]||(a[0]=[l('<h2 id="部署前准备" tabindex="-1"><a class="header-anchor" href="#部署前准备"><span>部署前准备</span></a></h2><h3 id="服务器环境配置" tabindex="-1"><a class="header-anchor" href="#服务器环境配置"><span>服务器环境配置</span></a></h3><ul><li>安装linux系统并更新软件包</li><li>安装基础组件：如web服务器、运行时环境（Node、Java、Python等）、数据库 <ul><li>web服务器（Apache/Nginx）可以通过docker来配置</li><li>数据库因为性能和稳定性方面，可以单独下载安装并配置，避开docker的缺点</li></ul></li></ul><h3 id="代码与依赖管理" tabindex="-1"><a class="header-anchor" href="#代码与依赖管理"><span>代码与依赖管理</span></a></h3><ul><li>版本控制集成​：通过 Git 将代码提交至仓库（如 GitHub/GitLab），确保代码版本与生产环境一致</li><li>依赖打包​：使用工具如 npm install --production 或 composer install 生成轻量依赖包 ，避免服务器重复下载。</li></ul><h2 id="代码上传部署" tabindex="-1"><a class="header-anchor" href="#代码上传部署"><span>代码上传部署</span></a></h2><h3 id="代码传输方式​" tabindex="-1"><a class="header-anchor" href="#代码传输方式​"><span>代码传输方式​</span></a></h3><ul><li>FTP/SFTP​：适用于小型项目，通过 FileZilla 等工具直接上传至服务器 /var/www/html 等目录</li><li>Git 自动化部署​：通过 git clone 或 CI/CD 工具（如 Jenkins/GitHub Actions）自动拉取最新代码</li><li>容器化部署​：将项目打包为 Docker 镜像，推送至阿里云容器镜像服务（ACR）或私有仓库，通过 docker pull 拉取运行</li></ul><h3 id="服务器配置与优化​" tabindex="-1"><a class="header-anchor" href="#服务器配置与优化​"><span>服务器配置与优化​</span></a></h3><ul><li>Web 服务器配置​： <ul><li>Apache：修改 httpd.conf，设置 DocumentRoot 指向项目目录，启用 mod_rewrite</li><li>Nginx：配置反向代理和 PHP-FPM 解析，优化静态资源缓存</li></ul></li><li>数据库同步​：导出本地数据并导入服务器数据库（如 mysqldump），更新配置文件中的连接参数</li></ul><h2 id="测试和验证" tabindex="-1"><a class="header-anchor" href="#测试和验证"><span>测试和验证</span></a></h2><ul><li>功能测试</li><li>环境一致性测试</li></ul><h2 id="监控与维护" tabindex="-1"><a class="header-anchor" href="#监控与维护"><span>监控与维护</span></a></h2><h3 id="实时监控​" tabindex="-1"><a class="header-anchor" href="#实时监控​"><span>实时监控​</span></a></h3><ul><li>系统指标​：监控 CPU、内存、磁盘 I/O（使用 Prometheus + Grafana）</li><li>应用日志​：收集错误日志（ELK 栈），设置告警规则（如 5xx 错误超过阈值）</li><li>用户体验​：通过 New Relic 或阿里云 ARMS 追踪页面加载时间与 API 响应速度 ​</li></ul><h3 id="持续维护​" tabindex="-1"><a class="header-anchor" href="#持续维护​"><span>持续维护​</span></a></h3><ul><li>定期更新​：升级依赖库修复安全漏洞（如 npm audit fix）</li><li>备份策略​：每日全量备份数据库，异地存储备份文件</li><li>自动化运维​：通过 Ansible 或 Terraform 实现配置管理和扩缩容</li></ul>',17)])])}const d=e(s,[["render",t]]),c=JSON.parse('{"path":"/notes/endnotes/domain/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B.html","title":"项目部署流程","lang":"zh-CN","frontmatter":{"title":"项目部署流程","date":"2025-05-06T00:00:00.000Z","description":"本地项目部署到云服务器","article":false,"feed":false,"seo":false,"head":[]},"git":{"createdTime":1756821233000,"updatedTime":1756821233000,"contributors":[{"name":"yumuysl","username":"","email":"yinchuanyjw@outlook.com","commits":1}]},"readingTime":{"minutes":1.76,"words":529},"filePathRelative":"notes/endnotes/domain/项目部署流程.md"}');export{d as comp,c as data};
