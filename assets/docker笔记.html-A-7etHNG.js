import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as n,o as l}from"./app-DtzJMAxv.js";const e={};function t(d,s){return l(),a("div",null,[...s[0]||(s[0]=[n(`<h2 id="零-虚拟机和容器" tabindex="-1"><a class="header-anchor" href="#零-虚拟机和容器"><span>（零）虚拟机和容器</span></a></h2><h4 id="虚拟机运行逻辑粗略梳理" tabindex="-1"><a class="header-anchor" href="#虚拟机运行逻辑粗略梳理"><span>虚拟机运行逻辑粗略梳理</span></a></h4><ol><li>真实硬件</li><li>划分和限制真实硬件资源供虚拟机使用</li><li>虚拟硬件</li><li>虚拟操作系统及其应用</li></ol><h4 id="容器" tabindex="-1"><a class="header-anchor" href="#容器"><span>容器</span></a></h4><ol><li>真实硬件和限制使用资源</li><li>虚拟操作系统和应用</li></ol><h4 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>docker</span></a></h4><p>用来控制容器的工具，docker和容器不可以划等号</p><h2 id="一-安装" tabindex="-1"><a class="header-anchor" href="#一-安装"><span>（一）安装</span></a></h2><ul><li><a href="https://blog.csdn.net/u013541325/article/details/122279610?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-122279610-blog-122389202.235%5Ev32%5Epc_relevant_default_base3&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4" target="_blank" rel="noopener noreferrer">点击这里</a>查看win10安装docker教程，需要注意的是如果需要将docker下载到其他盘</li><li>怎么安装到其他盘：在docker安装包下载完后，在该目录打开终端，运行下方命令，其中安装地址可以换成其他地址</li></ul><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">start /w </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Docker Desktop Installer.exe&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> install -accept-license --installation-dir=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;D:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">\\P</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">rogram Files</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">\\D</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ocker&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> --wsl-default-data-root=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;D:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">\\P</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">rogram Files</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">\\D</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ocker</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">\\d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ata&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> --windows-containers-default-data-root=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;D:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Program Files</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Docker&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="二-配置" tabindex="-1"><a class="header-anchor" href="#二-配置"><span>（二）配置</span></a></h2><h3 id="一、转换wsl脱离c盘" tabindex="-1"><a class="header-anchor" href="#一、转换wsl脱离c盘"><span>一、转换wsl脱离c盘</span></a></h3><p>由于下载的docker镜像文件都保存在c盘，而通过mklink方式无效（起码本人是这样），所以可以通过另外一种方式将wsl文件转移到其他位置，</p><ul><li>确定虚拟磁盘文件：cmd或powershell下输入wsl -l -v，除了下载的docker镜像外，还有docker-desktop和docker-desktop-data，主要是对后两者进行操作。后续操作如下：</li></ul><ol><li>关闭docker</li><li>关闭wsl：powershell下输入 wsl --shutdown</li><li>将docker-desktop和docker-desktop-data导出到自己指定目录</li></ol><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//F:\\Docker\\wsl\\docker-desktop文件夹自己随意指定即可</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">wsl --export docker-desktop F:\\Docker\\wsl\\docker-desktop\\docker-desktop.tar</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">wsl --export docker-desktop-data F:\\Docker\\wsl\\docker-desktop-data\\docker-desktop-data.tar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>注销docker-desktop和docker-desktop-data，此步会删除C:\\Users\\用户\\AppData\\Local\\Docker\\wsl\\下两个文件夹的ext4.vhdx文件，需要时建议备份：</li></ol><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">wsl --unregister docker-desktop</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">wsl --unregister docker-desktop-data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>将docker-desktop和docker-desktop-data导入wsl，并设置路径（新的镜像以及各种docker使用的文件挂载目录）</li></ol><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">wsl --import docker-desktop F:\\Docker\\wsl\\docker-desktop\\docker-desktop  F:\\Docker\\wsl\\docker-desktop\\docker-desktop.tar --version </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">wsl --import docker-desktop-data F:\\Docker\\wsl\\docker-desktop-data\\docker-desktop-data  F:\\Docker\\wsl\\docker-desktop-data\\docker-desktop-data.tar --version </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>验证是否有效：</li></ol><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//查找可用镜像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker search 镜像名（如ubuntu）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//拉取镜像，如：docker pull ubuntu</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker pull  image_name(可用镜像的镜像名称)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看c盘以及目标盘（此处是F盘）大小是否改变。</p><h3 id="二、换镜像源" tabindex="-1"><a class="header-anchor" href="#二、换镜像源"><span>二、换镜像源</span></a></h3><ol><li><p>可用镜像源：</p><ul><li>科大镜像：https://docker.mirrors.ustc.edu.cn/</li><li>网易：https://hub-mirror.c.163.com/</li><li>阿里云：https://&lt;你的ID&gt;.mirror.aliyuncs.com</li><li>七牛云加速器：https://reg-mirror.qiniu.com</li></ul></li><li><p>docker换源 打开docker设置页面，安装如下方式添加： <a href="../../.vuepress/public/assets/endnotes/docker/docker%E9%95%9C%E5%83%8F%E6%BA%90.jpg">换源</a></p></li><li><p>打开powshell输入docker info查看是否成功。</p></li></ol><h2 id="三-命令" tabindex="-1"><a class="header-anchor" href="#三-命令"><span>（三）命令</span></a></h2><h3 id="一、容器" tabindex="-1"><a class="header-anchor" href="#一、容器"><span>一、容器</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//退出容器（容器会停止）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">exit   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 或者 ctrl + d</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//查看所有的容器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker ps -a</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//启动一个已经停止的容器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker start  &lt;容器 ID&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//后台运行：加参数d</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker run -itd --name &lt;镜像名&gt; /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//停止容器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker stop &lt;容器 ID&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//重启容器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker restart &lt;容器 ID&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//进入在正在运行的容器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker attach &lt;容器 ID&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker exec -it &lt;容器id&gt; bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//退出容器终端</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker exec -it &lt;容器 ID&gt; /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//导出容器快照到本地指定文件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker export &lt;容器 ID&gt; &gt; filename.tar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//导入容器快照</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cat docker/filename.tar | docker import - &lt;快照所在目录&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//删除容器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker rm -f &lt;容器 ID&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、镜像" tabindex="-1"><a class="header-anchor" href="#二、镜像"><span>二、镜像</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//搜索可用镜像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker search &lt;关键字，如centos&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//获取镜像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker pull &lt;镜像名/仓库名&gt;:&lt;版本号（默认最新）&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//列出镜像列表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker images ls</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//列出通过筛选的镜像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker image ls -f since=mongo:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3.2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   //列出mongo:3.2 之后建立的镜像</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//查看镜像、容器、数据卷所占用的空间</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker system df</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//显示虚悬镜像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker image ls -f dangling=</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//删除虚悬镜像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker image prune</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//使用镜像，会生成一个容器实例</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker run -it &lt;镜像名&gt; /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//删除镜像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker rmi &lt;镜像名&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//删除本地镜像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker image rm [</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">选项</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] &lt;镜像</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&lt;镜像</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">&gt;</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> ...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//更新镜像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker run -t -i &lt;镜像名&gt;:&lt;版本号&gt; /bin/bash</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">apt-get update</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">exit </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker commit -m=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;你的描述&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -a=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;指定镜像作者&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;容器 ID&gt; &lt;指定要创建的镜像名&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker images    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//查看镜像</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//构建镜像：创建一个文件告诉docker如何构建镜像</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cat onefile</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//进入文件后</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">FROM    centos:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6.7</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //from指定使用哪个镜像源</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MAINTAINER      Fisher </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;fisher@sudops.com&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">RUN     /bin/echo &#39;root:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">123456</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&#39; |chpasswd</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">RUN     useradd runoob</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">RUN     /bin/echo &#39;runoob:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">123456</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&#39; |chpasswd</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">RUN     /bin/echo -e </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;LANG=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">en_US.UTF-8</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;/etc/default/local</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EXPOSE  </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">22</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EXPOSE  </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">CMD     /usr/sbin/sshd -D</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//退出文件后</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker build -t &lt;镜像名&gt; .  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//注意有个&quot;.&quot;，表示onefile所在目录，可以指定绝对路径</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker images</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//设置镜像标签</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker tag &lt;镜像 ID&gt;:&lt;标签名&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三、仓库" tabindex="-1"><a class="header-anchor" href="#三、仓库"><span>三、仓库</span></a></h3><p>目前Docker官方维护了一个公共仓库Docker Hub，大部分需求可以通过在此仓库直接下载使用，但需要去官网注册一个docker账号</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//登录</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker login -u  &lt;Docker id&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">passward: 这里输入的token而非密码</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//退出</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker logout</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="四、dockerfile" tabindex="-1"><a class="header-anchor" href="#四、dockerfile"><span>四、Dockerfile</span></a></h3><ol><li>.dockerignore文件：构建时忽略相应文件夹，比如.git、node_moudles</li><li>Dockerfile文件基础 <ul><li>要创建 Dockerfile，你可以在任何文本编辑器中创建一个新文件，并将其命名为“Dockerfile”。然后，你可以添加以下指令：</li></ul></li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>*  FROM : 指定基础镜像。基础镜像是一个已经存在的 Docker 镜像，你可以在它的基础上构建你的镜像。 </span></span>
<span class="line"><span>*  WORKDIR : 设置工作目录。工作目录是容器中运行命令的默认目录。 </span></span>
<span class="line"><span>*  COPY : 将文件从主机复制到容器中。 </span></span>
<span class="line"><span>*  RUN : 在容器中运行命令。 </span></span>
<span class="line"><span>*  EXPOSE : 暴露端口。这将允许你从外部访问容器中的应用程序。 </span></span>
<span class="line"><span>*  CMD : 设置默认命令。默认命令是容器启动时运行的命令。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="五、compose" tabindex="-1"><a class="header-anchor" href="#五、compose"><span>五、Compose</span></a></h3><h3 id="六、machine" tabindex="-1"><a class="header-anchor" href="#六、machine"><span>六、Machine</span></a></h3><h3 id="七、swarm-集群管理" tabindex="-1"><a class="header-anchor" href="#七、swarm-集群管理"><span>七、Swarm 集群管理</span></a></h3><h3 id="八、docker问题汇总" tabindex="-1"><a class="header-anchor" href="#八、docker问题汇总"><span>八、docker问题汇总</span></a></h3><h4 id="容器启动失败问题" tabindex="-1"><a class="header-anchor" href="#容器启动失败问题"><span>容器启动失败问题</span></a></h4><ul><li>问题描述：通过docker pull拉取镜像后启动镜像，发现容器运行失败，多次尝试后结果一样，且没有log内容，容器status字段为exited(0)</li><li>原因分析：exited为0表示容器正常退出，通过docker inpect &lt;容器名&gt; 检测config.cmd和entrypoint两个字段，发现entrypoin字段为null，cmd字段为/bin/bash，该命令在非交互模式下执行后会立即退出，而Docker容器仅在主进程运行时保持活跃，如果主进程/bin/bash执行完毕或主动退出，容器会自动停止。</li><li>解决方案： <ul><li>方案一：进入容器手动调试。启动容器并进入交互模式，命令为<code>docker run -it --rm --entrypoint /bin/sh &lt;镜像名&gt;</code>，之后执行<code>/bin/bash</code>，观察是否报错或直接退出，如果直接退出需要检测镜像是否缺失必要的依赖或启动逻辑</li><li>方案二：检查镜像构建完整性。重新拉取镜像并验证cmd配置<code>docker pull --no-cache &lt;镜像名&gt;</code>， <code>docker image inpect</code>检查config的cmd和entrypoint字段</li><li>方案三：覆盖默认命令以保持容器运行。执行命令<code>docker run -d --name &lt;自定义容器名&gt; &lt;镜像名&gt; tail -f /dev/null</code>，之后进入容器<code>docker exec -it &lt;容器ID&gt; /bin/bash</code>，该方式适合临时调式容器环境或需要手动介入时的场景。</li></ul></li></ul><h4 id="容器内systemctl指令执行失败问题" tabindex="-1"><a class="header-anchor" href="#容器内systemctl指令执行失败问题"><span>容器内systemctl指令执行失败问题</span></a></h4><ul><li>问题描述：通过systemctl指令启动nginx服务时，遇到如下报错：<code>Failed to get D-Bus connection: Operation not permitted</code></li><li>原因分析：在docker中启动容器默认不会开启D-Bus，这是因为Docker容器旨在提供轻量化、隔离的环境，而systemctl需要访问底层服务，并且systemctl管理的服务往往依赖系统其他组件，不符合轻量化原则。</li><li>解决方案： <ul><li>方案一：执行<code>docker run -d -name centos7 --privileged=true centos:7 /usr/sbin/init</code></li><li>方案二：采用开源项目docker-systemctl-replacement替换/usr/bin/systemctl文件，具体地址<code>https://github.com/gdraheim/docker-systemctl-replacement</code></li></ul></li></ul>`,44)])])}const r=i(e,[["render",t]]),p=JSON.parse('{"path":"/notes/endnotes/docker/docker%E7%AC%94%E8%AE%B0.html","title":"Docker笔记","lang":"zh-CN","frontmatter":{"title":"Docker笔记","date":"2023-04-26T00:00:00.000Z","tag":"docker笔记","icon":"file","description":"Docker学习笔记","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-20T19:57:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"禹穆穆\\"}]}"],["meta",{"property":"og:url","content":"https://bestoaloe.gitee.io/notes/endnotes/docker/docker%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"禹穆穆"}],["meta",{"property":"og:title","content":"Docker笔记"}],["meta",{"property":"og:description","content":"Docker学习笔记"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-20T19:57:16.000Z"}],["meta",{"property":"article:tag","content":"docker笔记"}],["meta",{"property":"article:published_time","content":"2023-04-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-20T19:57:16.000Z"}]]},"git":{"createdTime":1683098958000,"updatedTime":1758398236000,"contributors":[{"name":"bestoAloe","username":"","email":"286258752@qq.com","commits":29},{"name":"bestoaloe","username":"","email":"yinchuanyjw@outlook.com","commits":7},{"name":"yumuysl","username":"","email":"yinchuanyjw@outlook.com","commits":2}]},"readingTime":{"minutes":6.78,"words":2034},"filePathRelative":"notes/endnotes/docker/docker笔记.md","excerpt":""}');export{r as comp,p as data};
