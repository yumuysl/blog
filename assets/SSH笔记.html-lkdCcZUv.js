import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as d,o as i}from"./app-DtzJMAxv.js";const a={};function o(n,e){return i(),s("div",null,[...e[0]||(e[0]=[d(`<h2 id="ssh密钥登录-暂时只记录登录gitee的部分" tabindex="-1"><a class="header-anchor" href="#ssh密钥登录-暂时只记录登录gitee的部分"><span>ssh密钥登录（暂时只记录登录gitee的部分）</span></a></h2><ol><li>安装和启动openSSH： <ul><li>window平台下，打开设置，应用-&gt;应用和功能-&gt;可选功能，查找openSSH客户端，勾选安装。之后在cmd窗口中输入where ssh，如果出现ssh路径则安装成功。</li><li>linxu平台下，直接用命令行下载openssh即可，如sudo apt install openssh-server</li></ul></li><li>关于密钥 <ul><li>密钥（key）是一个非常大的数字，通过加密算法得到。对称加密只需要一个密钥，非对称加密需要两个密钥成对使用，分为公钥（public key）和私钥（private key）。SSH 密钥登录采用的是非对称加密，每个用户通过自己的密钥登录。其中，私钥必须私密保存，不能泄漏；公钥则是公开的，可以对外发送。它们的关系是，公钥和私钥是一一对应的，每一个私钥都有且仅有一个对应的公钥，反之亦然。如果数据使用公钥加密，那么只有使用对应的私钥才能解密，其他密钥都不行；反过来，如果使用私钥加密（这个过程一般称为“签名”），也只有使用对应的公钥解密。</li><li>密钥登录过程：客户端通过ssh-keygen生成自己的公钥和私钥，第一步手动将公钥放入远程服务器的指定位置；第二步，客户端向服务器发起ssh登录请求；第三步，服务器收到请求后随机发送以下数据给用户使之提供自己的身份；第四步，客户端收到服务器发来来的数据后用私钥进行签名，再发送给服务器；第五步，服务器收到加密的签名后，使用对应的公钥解密，然后对比原始数据，如果一致，则允许登录。</li></ul></li><li>ssh登录：</li></ol><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//a. 生成密钥，windows一般在c盘用户目录下.ssh文件夹内</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ssh-keygen -t ed</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">25519</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -C </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;备注（一般是邮箱）&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//密码可以空着，一路回车</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//b. pub格式的文件是公钥，另外一个是私钥</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//c. 打开公钥，复制里面的内容到服务器指定位置</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//d. 在cmd里输入：</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ssh -T git@gitee.com</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// git@gitee.com需要替换成服务器，这条命令会向服务器发起请求，确认是否链接成功，如果链接成功，会出现successful</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>ssh配置文件 在<code>.ssh</code>文件夹新增<code>config</code>文件，按照如下格式填写内容，可在终端直接输入shh 别名快速连接登录</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>Host yourname：这是一个连接的别名。</span></span>
<span class="line"><span>  HostName：服务器地址。</span></span>
<span class="line"><span>  Port：服务器的端口号。</span></span>
<span class="line"><span>  User：登录用户名。</span></span>
<span class="line"><span>  IdentityFile：私钥的本地路径，指向刚才生成的 id_rsa 文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一般使用<code>git</code>时，<code>git</code>会自动新增该配置</p><h2 id="相关命令和说明" tabindex="-1"><a class="header-anchor" href="#相关命令和说明"><span>相关命令和说明</span></a></h2><ol><li>ssh-keygen</li></ol><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-t ----&gt;用来指定密钥的加密算法，一般是RSA算法或者ED</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">25519</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">算法，建议使用后者，更安全。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-b ----&gt;指定密钥的二进制位数。这个参数值越大，密钥就越不容易破解，但是加密解密的计算开销也会加大。一般来说，-b至少应该是</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">，更安全一些可以设为</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2048</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">或者更高。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-C ----&gt;可以为密钥文件指定新的注释，格式为username@host</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-f ----&gt;指定生成私钥文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-p ----&gt;用于重新指定私钥的密码（passphrase）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-R ----&gt;将指定的主机公钥指纹移出known_hosts文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//举例：</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ssh-keygen -t rsa -b </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4096</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -C </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;your_email@domain.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -f mykey</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//表示生成以rsa算法加密且位数为4096备注为your_email@domain.com的私钥mykey和公钥mykey.pub文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文件上传和下载" tabindex="-1"><a class="header-anchor" href="#文件上传和下载"><span>文件上传和下载</span></a></h2><ul><li>上传文件：<code>sftp -P 端口 用户@ip地址</code>，进入交互模式后，输入<code>put 文件路径</code>上传文件</li></ul><ol start="2"><li>ssh-agent（暂定）</li><li>ssh-add（暂定）</li></ol><h2 id="附-ssh配置文件字段说明" tabindex="-1"><a class="header-anchor" href="#附-ssh配置文件字段说明"><span>附：ssh配置文件字段说明</span></a></h2><p>以下字段按功能分类说明，涵盖连接参数、认证、代理、超时、安全等核心场景。</p><h4 id="_1-基础连接参数" tabindex="-1"><a class="header-anchor" href="#_1-基础连接参数"><span><strong>1. 基础连接参数</strong></span></a></h4><p>用于定义目标主机的基本连接信息。</p><table><thead><tr><th>字段</th><th>说明</th><th>示例/默认值</th><th>注意事项</th></tr></thead><tbody><tr><td><code>Host</code></td><td>主机别名（自定义标识，支持通配符 <code>*</code> 和 <code>?</code>）</td><td><code>Host myserver</code></td><td>一个 <code>Host</code> 块对应一组主机配置，别名用于简化命令（如 <code>ssh myserver</code>）。</td></tr><tr><td><code>HostName</code></td><td>目标主机的实际 IP 地址或域名（必选，若 <code>Host</code> 是别名）</td><td><code>HostName 192.168.1.100</code></td><td>支持域名解析（如 <code>example.com</code>），若为空则使用 <code>Host</code> 别名作为地址。</td></tr><tr><td><code>Port</code></td><td>目标主机的 SSH 服务端口（默认 22）</td><td><code>Port 2222</code></td><td>若目标主机修改了 SSH 端口（如 2222），需显式指定。</td></tr><tr><td><code>User</code></td><td>登录目标主机的用户名</td><td><code>User admin</code></td><td>若不指定，默认使用当前本地用户名。</td></tr><tr><td><code>HostKeyAlias</code></td><td>为远程主机的公钥指定别名（用于 <code>~/.ssh/known_hosts</code> 记录）</td><td><code>HostKeyAlias myserver-key</code></td><td>避免因主机 IP 变更导致的“主机密钥已更改”警告（如云服务器重建后 IP 变化）。</td></tr></tbody></table><h4 id="_2-认证相关配置" tabindex="-1"><a class="header-anchor" href="#_2-认证相关配置"><span><strong>2. 认证相关配置</strong></span></a></h4><p>控制 SSH 连接时的认证方式（密码、密钥、代理等）。</p><table><thead><tr><th>字段</th><th>说明</th><th>示例/默认值</th><th>注意事项</th></tr></thead><tbody><tr><td><code>IdentityFile</code></td><td>指定用于认证的私钥文件路径（支持多个，按顺序尝试）</td><td><code>IdentityFile ~/.ssh/id_rsa</code></td><td>私钥需对应远程主机的公钥（需提前将公钥添加到远程 <code>~/.ssh/authorized_keys</code>）。</td></tr><tr><td><code>IdentitiesOnly</code></td><td>强制仅使用 <code>IdentityFile</code> 指定的私钥，忽略 SSH 代理或其他默认密钥</td><td><code>IdentitiesOnly yes</code></td><td>避免因 SSH 代理中存在多个密钥导致认证失败（如同时有 GitHub 和服务器密钥）。</td></tr><tr><td><code>PasswordAuthentication</code></td><td>是否允许使用密码认证（默认 <code>yes</code>）</td><td><code>PasswordAuthentication no</code></td><td>禁用密码认证，强制使用密钥认证（提升安全性）。</td></tr><tr><td><code>PubkeyAuthentication</code></td><td>是否允许使用公钥认证（默认 <code>yes</code>）</td><td><code>PubkeyAuthentication yes</code></td><td>若远程主机禁用公钥认证（罕见），需设为 <code>no</code> 并启用密码认证。</td></tr><tr><td><code>ChallengeResponseAuthentication</code></td><td>是否启用挑战-应答认证（如 PAM 模块）</td><td><code>ChallengeResponseAuthentication no</code></td><td>通常保持默认，仅在需要额外认证方式（如双因素）时启用。</td></tr></tbody></table><h4 id="_3-代理与跳板机配置" tabindex="-1"><a class="header-anchor" href="#_3-代理与跳板机配置"><span><strong>3. 代理与跳板机配置</strong></span></a></h4><p>通过代理服务器（如 SOCKS5、HTTP 代理）或跳板机（堡垒机）间接连接目标主机。</p><table><thead><tr><th>字段</th><th>说明</th><th>示例/默认值</th><th>注意事项</th></tr></thead><tbody><tr><td><code>ProxyCommand</code></td><td>指定连接目标主机前执行的代理命令（覆盖 <code>ProxyJump</code>）</td><td><code>ProxyCommand nc -X 5 -x proxy:1080 %h %p</code></td><td><code>%h</code> 表示目标主机名，<code>%p</code> 表示目标端口；常用工具 <code>nc</code>（netcat）、<code>ssh</code>（跳板机）。</td></tr><tr><td><code>ProxyJump</code></td><td>简化版跳板机配置（SSH 7.3+ 支持），直接指定跳板机主机名或 IP</td><td><code>ProxyJump user@jump-host:22</code></td><td>等价于 <code>ProxyCommand ssh -W %h:%p user@jump-host</code>，更易读。</td></tr><tr><td><code>DynamicForward</code></td><td>本地动态端口转发（SOCKS5 代理），用于通过目标主机访问其他网络</td><td><code>DynamicForward localhost:1080</code></td><td>本地程序通过 <code>socks5h://localhost:1080</code> 访问远程网络（<code>-h</code> 表示解析远程 DNS）。</td></tr></tbody></table><h4 id="_4-超时与连接控制" tabindex="-1"><a class="header-anchor" href="#_4-超时与连接控制"><span><strong>4. 超时与连接控制</strong></span></a></h4><p>调整连接建立、数据传输的超时时间，避免长时间挂起。</p><table><thead><tr><th>字段</th><th>说明</th><th>示例/默认值</th><th>注意事项</th></tr></thead><tbody><tr><td><code>ConnectTimeout</code></td><td>建立 TCP 连接的超时时间（秒）</td><td><code>ConnectTimeout 10</code></td><td>若网络延迟高，可适当调大（如 20）；默认无限制（可能永久等待）。</td></tr><tr><td><code>ServerAliveInterval</code></td><td>客户端向服务器发送心跳包的间隔（秒）</td><td><code>ServerAliveInterval 30</code></td><td>若服务器无响应，超过 <code>ServerAliveCountMax</code> 次后会断开连接。</td></tr><tr><td><code>ServerAliveCountMax</code></td><td>客户端允许服务器无响应的最大心跳次数</td><td><code>ServerAliveCountMax 3</code></td><td>总超时时间 = <code>ServerAliveInterval</code> × <code>ServerAliveCountMax</code>（如 30×3=90秒）。</td></tr><tr><td><code>ConnectionAttempts</code></td><td>连接失败时的重试次数</td><td><code>ConnectionAttempts 3</code></td><td>适用于网络不稳定的场景（如移动网络）。</td></tr></tbody></table><h4 id="_5-安全相关配置" tabindex="-1"><a class="header-anchor" href="#_5-安全相关配置"><span><strong>5. 安全相关配置</strong></span></a></h4><p>控制 SSH 连接的安全策略（如主机密钥验证、加密算法等）。</p><table><thead><tr><th>字段</th><th>说明</th><th>示例/默认值</th><th>注意事项</th></tr></thead><tbody><tr><td><code>StrictHostKeyChecking</code></td><td>是否严格检查远程主机的公钥（防止中间人攻击）</td><td><code>StrictHostKeyChecking yes</code></td><td><code>yes</code>（默认）：首次连接时提示确认主机密钥；<code>no</code>：自动接受（不安全）。</td></tr><tr><td><code>UserKnownHostsFile</code></td><td>指定存储远程主机公钥的文件路径（默认 <code>~/.ssh/known_hosts</code>）</td><td><code>UserKnownHostsFile ~/.ssh/my_known_hosts</code></td><td>多用户或隔离环境时可自定义路径。</td></tr><tr><td><code>Ciphers</code></td><td>指定允许的加密算法（逗号分隔）</td><td><code>Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com</code></td><td>仅使用高强度算法（禁用弱算法如 <code>arcfour</code>、<code>des</code>）。</td></tr><tr><td><code>MACs</code></td><td>指定允许的消息认证码（MAC）算法</td><td><code>MACs hmac-sha2-512-etm@openssh.com</code></td><td>与 <code>Ciphers</code> 配合，提升传输安全性。</td></tr><tr><td><code>KexAlgorithms</code></td><td>指定密钥交换（Key Exchange）算法</td><td><code>KexAlgorithms curve25519-sha256@libssh.org</code></td><td>使用现代 KEX 算法（如 <code>curve25519</code>），避免旧算法（如 <code>diffie-hellman-group1-sha1</code>）。</td></tr></tbody></table><h4 id="_6-其他实用配置" tabindex="-1"><a class="header-anchor" href="#_6-其他实用配置"><span><strong>6. 其他实用配置</strong></span></a></h4><table><thead><tr><th>字段</th><th>说明</th><th>示例/默认值</th><th>注意事项</th></tr></thead><tbody><tr><td><code>ForwardAgent</code></td><td>是否启用 SSH 代理转发（将本地代理传递给远程主机）</td><td><code>ForwardAgent yes</code></td><td>远程主机可通过本地代理访问其他服务（如 GitHub），需谨慎启用（可能泄露代理权限）。</td></tr><tr><td><code>ForwardX11</code></td><td>是否启用 X11 图形界面转发（本地显示远程图形程序）</td><td><code>ForwardX11 yes</code></td><td>仅适用于需要远程运行 GUI 程序的场景（如 <code>xeyes</code>），默认 <code>no</code>。</td></tr><tr><td><code>X11DisplayOffset</code></td><td>X11 转发的显示端口号偏移量（默认 10）</td><td><code>X11DisplayOffset 10</code></td><td>避免与本地 X11 端口冲突（本地默认从 6000 开始，远程显示端口为 6000+offset）。</td></tr><tr><td><code>Compression</code></td><td>是否启用连接压缩（适用于低带宽场景）</td><td><code>Compression yes</code></td><td>仅对文本类数据有效（如代码、日志），二进制文件（如视频）压缩效果差。</td></tr><tr><td><code>LogLevel</code></td><td>SSH 客户端的日志级别（调试时使用）</td><td><code>LogLevel VERBOSE</code></td><td>可选值：<code>QUIET</code>（静默）、<code>FATAL</code>、<code>ERROR</code>、<code>INFO</code>（默认）、<code>VERBOSE</code>、<code>DEBUG</code>。</td></tr></tbody></table><h2 id="相关问题记录" tabindex="-1"><a class="header-anchor" href="#相关问题记录"><span>相关问题记录</span></a></h2><h3 id="ssh远程连接超时问题" tabindex="-1"><a class="header-anchor" href="#ssh远程连接超时问题"><span>SSH远程连接超时问题</span></a></h3><ul><li>这个很烦人，简而言之，根本问题在于TCP连接超时，而服务器防火墙为了安全在tcp超时时会主动关闭ssh连接</li><li>ssh保持会话需要注意的三个系统参数：</li><li>tcp_keepalive_time: 设置TCP连接的空闲时间，超过这个时间就会发送一个探测包，以判断连接是否仍然可用，使用<code>cat /proc/sys/net/ipv4/tcp_keepalive_time</code>查看</li><li>tcp_keepalive_probes：TCP keepalive探针，有tcp发送的数据包，使用 <code>cat /proc/sys/net/ipv4/tcp_keepalive_probes</code>查看</li><li>tcp_keepalive_intvl：控制发送空闲tcp连接的keepalive探针的时间间隔，使用<code>cat /proc/sys/net/ipv4/tcp_keepalive_intvl</code>查看</li><li>解决方法： <ul><li>服务端：编辑<code>/etc/ssh/sshd_config</code>文件，将<code>ClientAliveInterval</code>和<code>ClientAliveCountMax</code>两项的值设置为<code>0</code>，同时将<code>TCPKeepAlive</code>字段设置为<code>yes</code>，重启ssh服务<code>sudo systemctl restart sshd </code></li><li>客户端：设置KeepAlive选项再登录，不同ssh客户端设置方式不同，例如openSSH：<code>ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=3 user@host</code></li></ul></li></ul>`,34)])])}const r=t(a,[["render",o]]),h=JSON.parse('{"path":"/notes/frontnotes/frontbase/SSH%E7%AC%94%E8%AE%B0.html","title":"SSH登录以及相关命令","lang":"zh-CN","frontmatter":{"title":"SSH登录以及相关命令","date":"2023-05-10T00:00:00.000Z","tag":"前端笔记","headerDepth":2,"icon":"file","description":"SSH远程登录流程和常用命令总汇","toc":{"levels":[2,4]},"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SSH登录以及相关命令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-20T19:57:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"禹穆穆\\"}]}"],["meta",{"property":"og:url","content":"https://bestoaloe.gitee.io/notes/frontnotes/frontbase/SSH%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"禹穆穆"}],["meta",{"property":"og:title","content":"SSH登录以及相关命令"}],["meta",{"property":"og:description","content":"SSH远程登录流程和常用命令总汇"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-20T19:57:16.000Z"}],["meta",{"property":"article:tag","content":"前端笔记"}],["meta",{"property":"article:published_time","content":"2023-05-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-20T19:57:16.000Z"}]]},"git":{"createdTime":1694521883000,"updatedTime":1758398236000,"contributors":[{"name":"bestoAloe","username":"","email":"286258752@qq.com","commits":21},{"name":"bestoaloe","username":"","email":"yinchuanyjw@outlook.com","commits":6},{"name":"yumuysl","username":"","email":"yinchuanyjw@outlook.com","commits":3}]},"readingTime":{"minutes":8.78,"words":2634},"filePathRelative":"notes/frontnotes/frontbase/SSH笔记.md","excerpt":""}');export{r as comp,h as data};
